package com.fr.design.mainframe;import com.fr.design.constants.LayoutConstants;import com.fr.design.designer.TargetComponent;import com.fr.design.gui.ilable.UILabel;import com.fr.design.layout.TableLayout;import com.fr.design.layout.TableLayoutHelper;import com.fr.general.Inter;import javax.swing.*;import java.awt.*;/** * Author : daisy * Date: 13-9-12 * Time: 下午6:21 */public abstract class AuthorityEditPane extends JPanel {	protected static final int TOP_GAP = 11;	protected static final int LEFT_GAP = 8;	protected static final int ALIGNMENT_GAP = -3;	protected UILabel type = null;	protected UILabel name = null;	protected JPanel checkPane = null;	private TargetComponent target;	public AuthorityEditPane(TargetComponent target) {		this.target = target;		setLayout(new BorderLayout());		type = new UILabel();		name = new UILabel();		checkPane = new JPanel();		checkPane.setLayout(new BorderLayout());		this.add(layoutText(), BorderLayout.WEST);		this.add(layoutPane(), BorderLayout.CENTER);		this.setBorder(BorderFactory.createEmptyBorder(TOP_GAP, LEFT_GAP, 0, 0));	}	private JPanel layoutText() {		double p = TableLayout.PREFERRED;		Component[][] components = new Component[][]{				new Component[]{new UILabel(Inter.getLocText("Type") + ":", SwingConstants.RIGHT)},				new Component[]{new UILabel(Inter.getLocText("WF-Name") + ":", SwingConstants.RIGHT)},				new Component[]{new UILabel(Inter.getLocText("DashBoard-Potence") + ":", SwingConstants.RIGHT)},		};		double[] rowSize = {p, p, p};		double[] columnSize = {p};		int[][] rowCount = {{1}, {1}, {1}};		return TableLayoutHelper.createGapTableLayoutPane(components, rowSize, columnSize, rowCount, LayoutConstants.VGAP_MEDIUM, LayoutConstants.VGAP_MEDIUM);	}	private JPanel layoutPane() {		double f = TableLayout.FILL;		double p = TableLayout.PREFERRED;		Component[][] components = new Component[][]{				new Component[]{type},				new Component[]{name},				new Component[]{checkPane},		};		double[] rowSize = {p, p, p};		double[] columnSize = {f};		int[][] rowCount = {{1}, {1}, {1}};		return TableLayoutHelper.createGapTableLayoutPane(components, rowSize, columnSize, rowCount, LayoutConstants.VGAP_MEDIUM, LayoutConstants.VGAP_MEDIUM);	}	/**	 * 更新权限编辑面板的具体内容：类型、名称、权限面板	 */	public void populateDetials() {		populateType();		populateName();		checkPane.removeAll();		populateCheckPane();		checkPane.setBorder(BorderFactory.createEmptyBorder(ALIGNMENT_GAP, 0, 0, 0));	}	public abstract void populateType();	public abstract void populateName();	public abstract JPanel populateCheckPane();}